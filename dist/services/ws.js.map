{"version":3,"sources":["services/ws.ts"],"names":[],"mappings":"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","file":"ws.js","sourcesContent":["import * as _ from 'lodash';\n\ninterface RequestDetails {\n    path: string;\n    params: Object;\n}\n\nconst ws = angular.module('pathwayvis.services.ws', []);\n\n// WS url\nexport const WS_ROOT_URL = 'ws://api.dd-decaf.eu/wsmodels/';\n\nexport class WSService {\n\n    public reconnectInterval: number = 1000;\n    public timeoutInterval: number = 10000;\n    public readyState: number;\n\n    private _forcedClose: boolean = false;\n    private _timedOut: boolean = false;\n    private _ws: WebSocket;\n    private _url: string;\n    private _callbacks; // TODO: add type\n    private _q: angular.IQService;\n    private _requestID: string;\n\n    public onopen: (ev: Event) => void = function (event: Event) {};\n    public onclose: (ev:CloseEvent) => void = function (event: CloseEvent) {};\n    public onconnecting: () => void = function () {};\n    public onmessage: (ev:MessageEvent) => void = function (event: MessageEvent) {};\n    public onerror: (ev:ErrorEvent) => void = function (event: ErrorEvent) {};\n\n    constructor($q: angular.IQService) {\n        this._callbacks = {};\n        this._q = $q;\n    }\n\n    private _generateID(): string {\n        return Math.random().toString(36).slice(2);\n    }\n\n    public connect(reconnectAttempt: boolean, path: string) {\n        this.readyState = WebSocket.CONNECTING;\n        this._url = WS_ROOT_URL + path;\n\n        this._ws = new WebSocket(this._url);\n        this.onconnecting();\n\n        console.log('ReconnectingWebSocket', 'attempt-connect', this._url);\n\n        var localWs = this._ws;\n\n        var timeout = setTimeout(() => {\n            console.log('ReconnectingWebSocket', 'connection-timeout', this._url);\n            this._timedOut = true;\n            localWs.close();\n            this._timedOut = false;\n        }, this.timeoutInterval);\n\n        this._ws.onopen = (event:Event) => {\n            clearTimeout(timeout);\n            console.log('ReconnectingWebSocket', 'onopen', this._url);\n            this.readyState = WebSocket.OPEN;\n            reconnectAttempt = false;\n            this.onopen(event);\n        };\n\n        this._ws.onclose = (event:CloseEvent) => {\n            clearTimeout(timeout);\n            this._ws = null;\n            if (this._forcedClose) {\n                this.readyState = WebSocket.CLOSED;\n                this.onclose(event);\n            } else {\n                this.readyState = WebSocket.CONNECTING;\n                this.onconnecting();\n                if (!reconnectAttempt && !this._timedOut) {\n                    console.log('ReconnectingWebSocket', 'onclose', this._url);\n                    this.onclose(event);\n                }\n                setTimeout(() => {\n                    this.connect(true, path);\n                }, this.reconnectInterval);\n            }\n        };\n\n        this._ws.onmessage = (event) => {\n            const result = JSON.parse(event.data);\n            return this._callbacks[this._requestID].resolve(result);\n        };\n\n        this._ws.onerror = (event) => {\n            console.log('ReconnectingWebSocket', 'onerror', this._url, event);\n            this.onerror(event);\n        };\n    }\n\n    public send(data: any): angular.IPromise<any> {\n        this._requestID = this._generateID();\n        this._callbacks[this._requestID] = this._q.defer();\n\n        if (this._ws) {\n            this._ws.send(JSON.stringify(data));\n            return this._callbacks[this._requestID].promise;\n        } else {\n            throw 'INVALID_STATE_ERR : Pausing to reconnect websocket';\n        }\n    }\n\n    /**\n     * Returns boolean, whether websocket was FORCEFULLY closed.\n     */\n    public close(): boolean {\n        if (this._ws) {\n            this._forcedClose = true;\n            this._ws.close();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Additional public API method to refresh the connection if still open\n     * (close, re-open). For example, if the app suspects bad data / missed\n     * heart beats, it can try to refresh.\n     *\n     * Returns boolean, whether websocket was closed.\n     */\n    public refresh(): boolean {\n        if (this._ws) {\n            this._ws.close();\n            return true;\n        }\n        return false;\n    }\n}\n\nws.service('ws', WSService);\nexport default ws;\n"]}